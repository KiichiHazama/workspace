{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "17406714",
   "metadata": {
    "id": "3ed1bf57"
   },
   "source": [
    "## randomライブラリ\n",
    "\n",
    "randomライブラリを利用して色々なことをやってみよう。\n",
    "\n",
    "まず、忘れずにライブラリのインポートをしよう。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a5de1cb6",
   "metadata": {
    "id": "73301d00"
   },
   "outputs": [],
   "source": [
    "import random"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bb141ba0",
   "metadata": {
    "id": "532123e1"
   },
   "source": [
    "ライブラリのインポートが完了したら、例題に取り掛かろう\n",
    "\n",
    "【例題】ランダムな数字を出力してみよう。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "cc45c7b5",
   "metadata": {
    "id": "a2e5fa81"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3969578812341532\n",
      "3\n",
      "13.62558187849546\n"
     ]
    }
   ],
   "source": [
    "print(random.random())\n",
    "print(random.randint(0,5))\n",
    "print(random.uniform(10,15))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "862a4bf5",
   "metadata": {
    "id": "3adc6b41"
   },
   "source": [
    "**解説**\n",
    "* 実行するたびにランダムに値を算出している\n",
    "* 範囲は関数によって以下のように決まっている\n",
    "    * 0≦x<1の実数`x`を出力する関数random()を動かす場合：random.random()\n",
    "    * a≦x≦bの整数`x`を出力する関数randint()を動かす場合：random.randint(a,b)\n",
    "    * a≦x≦bの実数`x`を出力する関数uniform()を動かす場合：random.uniform(a,b)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "428aed44",
   "metadata": {
    "id": "0d4665e0"
   },
   "source": [
    "【例題】適当なリストの中からランダムに要素を取り出してみよう。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "29c8c379",
   "metadata": {
    "id": "f57a508f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "牛\n"
     ]
    }
   ],
   "source": [
    "animals=[\"鼠\",\"牛\",\"虎\",\"兎\",\"竜\",\"蛇\",\"馬\",\"羊\",\"猿\",\"鳥\",\"犬\",\"猪\"]\n",
    "print(random.choice(animals))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c12ab9e",
   "metadata": {
    "id": "060944fa"
   },
   "source": [
    "**解説**\n",
    "* 実行するたびにランダムに要素を取り出している\n",
    "* リストからランダムに要素を抽出する方法：random.choice(リスト名)\n",
    "\n",
    "**注意**\n",
    "- 関数名の前に書くライブラリ名を忘れないよう気を付けよう。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "823fcf63",
   "metadata": {
    "id": "97028f83"
   },
   "source": [
    "### random関数の偏り\n",
    "\n",
    "`random.random()`という関数では、乱数によって0.0～1.0までのランダムな値を算出することができる。\n",
    "\n",
    "これが本当に偏っているのか、乱数を100個生成して検証してみよう。\n",
    "\n",
    "【例題】randomで乱数を100個生成し、リスト`valid`に格納しよう。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9f826097",
   "metadata": {
    "id": "49f5a98a",
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.8172030285062135, 0.5798624037456866, 0.1463335676085855, 0.1709549486095463, 0.5893555754405728, 0.9949057978482204, 0.12463793842089699, 0.4659864390671159, 0.770755059377132, 0.432895908546559, 0.90213160989589, 0.7375217874437661, 0.6652000665964377, 0.7696754589082389, 0.3828988340347661, 0.6400897574920205, 0.6229388781155231, 0.3651147061770774, 0.7064567678794529, 0.7343893193396495, 0.14000867139863382, 0.5566903643635501, 0.4351399556360367, 0.7266778308558829, 0.40149791984885164, 0.972011711922199, 0.2519179319190292, 0.36235831444405986, 0.9134143324668125, 0.4086281513752583, 0.2204621972129579, 0.16800587129849776, 0.11004351086963138, 0.6914165009820352, 0.003539497460629648, 0.5691023597787462, 0.2699856603299936, 0.8824581777569767, 0.6901822500892556, 0.5677656824143565, 0.7889904087140863, 0.5252281222388799, 0.7072779954481948, 0.5837406475131258, 0.8053574997723149, 0.3803594039068715, 0.5924023724733327, 0.3130321093612123, 0.7854977111091288, 0.698506626783966, 0.01677801460618411, 0.8895147726297054, 0.919612203582125, 0.30300883244521293, 0.6803649330223839, 0.16777092095776802, 0.008482134811782172, 0.48823899694217787, 0.3215165893747658, 0.9759439185394104, 0.4131007403518101, 0.37649384900458127, 0.5767063493953931, 0.4421443198036613, 0.12686296669778052, 0.7937888164699213, 0.7915166210890748, 0.3601186678469579, 0.34641738456552473, 0.21189834494819682, 0.8523025805300487, 0.2773901079895933, 0.62416501270701, 0.7641784184173751, 0.17120553998583077, 0.15876122452811903, 0.5252899987129888, 0.9531746594206035, 0.6689783913178534, 0.2250971349423334, 0.40741403055918723, 0.1328456952900976, 0.7135969731034567, 0.33811283305085116, 0.2703897562969606, 0.01538100960419575, 0.6806347873014215, 0.682199020220281, 0.6208289319039758, 0.6378561594770977, 0.08654751459354182, 0.6786936099361635, 0.4177880009213536, 0.6040162983740435, 0.9377315693059682, 0.6985530903857915, 0.15589945412899875, 0.18290979190374757, 0.11847106758699755, 0.540527392333964]\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "valid=[]\n",
    "for i in range(100):\n",
    "    valid.append(random.random())\n",
    "print(valid)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ae3d7bc7",
   "metadata": {
    "id": "a4b6282e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100\n"
     ]
    }
   ],
   "source": [
    "print(len(valid))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54737c5f",
   "metadata": {
    "id": "f0f7f224"
   },
   "source": [
    "【例題】リスト`valid`の中身について、0.5以下の値が何個あるか計測しよう。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4c07ca65",
   "metadata": {
    "id": "f18ab8fa"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.1463335676085855, 0.1709549486095463, 0.12463793842089699, 0.4659864390671159, 0.432895908546559, 0.3828988340347661, 0.3651147061770774, 0.14000867139863382, 0.4351399556360367, 0.40149791984885164, 0.2519179319190292, 0.36235831444405986, 0.4086281513752583, 0.2204621972129579, 0.16800587129849776, 0.11004351086963138, 0.003539497460629648, 0.2699856603299936, 0.3803594039068715, 0.3130321093612123, 0.01677801460618411, 0.30300883244521293, 0.16777092095776802, 0.008482134811782172, 0.48823899694217787, 0.3215165893747658, 0.4131007403518101, 0.37649384900458127, 0.4421443198036613, 0.12686296669778052, 0.3601186678469579, 0.34641738456552473, 0.21189834494819682, 0.2773901079895933, 0.17120553998583077, 0.15876122452811903, 0.2250971349423334, 0.40741403055918723, 0.1328456952900976, 0.33811283305085116, 0.2703897562969606, 0.01538100960419575, 0.08654751459354182, 0.4177880009213536, 0.15589945412899875, 0.18290979190374757, 0.11847106758699755]\n"
     ]
    }
   ],
   "source": [
    "test=[]\n",
    "for r in valid:\n",
    "    if r<=0.5:\n",
    "        test.append(r)\n",
    "print(test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "32888812",
   "metadata": {
    "id": "12f94626"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "47\n"
     ]
    }
   ],
   "source": [
    "print(len(test))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0791a8fe",
   "metadata": {
    "id": "62318d3f"
   },
   "source": [
    "どうだろうか？0.5以下の値の数は100個中50個となっただろうか？\n",
    "\n",
    "実は乱数は偏りがあるため、必ず50個ぴったりになるとは限らない。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aea8a149",
   "metadata": {
    "id": "ef56e12f"
   },
   "source": [
    "【補足】リスト`valid`および`test`を内包表記で書いてみよう"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "07ee20dc",
   "metadata": {
    "id": "0ae1f60a"
   },
   "outputs": [],
   "source": [
    "from random import random\n",
    "valid=[random() for i in range(100)]\n",
    "test=[i for i in valid if i <= 0.5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "266415f4",
   "metadata": {
    "id": "e2f904a4"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100\n",
      "46\n"
     ]
    }
   ],
   "source": [
    "print(len(valid))\n",
    "print(len(test))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e547bdd",
   "metadata": {
    "id": "57048188"
   },
   "source": [
    "このように乱数は偏りが発生するが、上手く使えば様々な機能を実装できる。\n",
    "\n",
    "乱数の種類も一様乱数、正規乱数などたくさんあるので、興味のある人は自分で試してみよう。"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
